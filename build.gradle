plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.3'
    id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    implementation 'org.springframework.retry:spring-retry'
    //LOMBOK
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    //DB
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    //spring Retry
    implementation 'org.springframework.retry:spring-retry'
        //for test
    testImplementation 'com.squareup.okhttp3:okhttp'
    testImplementation 'com.squareup.okhttp3:mockwebserver'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

bootJar {
    archiveFileName = 'app.jar'
}

jar {
    enabled = false
}

tasks.named('test') {
    useJUnitPlatform()
}

//// $ ./gradlew clean build -PKAKAO_REST_API_KEY={api key 값} 명령어로 전체 테스트 및 빌드하여 jar 파일 생성
//processTestResources {
//    boolean hasProperty = project.hasProperty("KAKAO_REST_API_KEY")
//    System.out.println("Set kakao rest api key: $hasProperty")
//    filesMatching('**/application.yml') {
//        expand(project.properties)
//    }
//}